const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function initializeUserPoints() {
  try {
    console.log('üîß Initialisation des points pour tous les utilisateurs...');
    
    // R√©cup√©rer tous les utilisateurs
    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        points: true
      }
    });
    
    console.log(`üìä ${users.length} utilisateurs trouv√©s`);
    
    let updatedCount = 0;
    
    // Mettre √† jour chaque utilisateur individuellement
    for (const user of users) {
      if (user.points === null || user.points === undefined) {
        await prisma.user.update({
          where: { id: user.id },
          data: { points: 5 }
        });
        updatedCount++;
        console.log(`‚úÖ ${user.email}: points initialis√©s √† 5`);
      } else {
        console.log(`‚ÑπÔ∏è  ${user.email}: d√©j√† ${user.points} points`);
      }
    }
    
    console.log(`\nüéØ R√©sum√©: ${updatedCount} utilisateurs mis √† jour`);
    
    // V√©rifier l'√©tat final
    const finalUsers = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        points: true
      }
    });
    
    console.log('\nüìä √âtat final des points des utilisateurs :');
    finalUsers.forEach(user => {
      console.log(`- ${user.email}: ${user.points} points`);
    });
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation des points:', error);
  } finally {
    await prisma.$disconnect();
  }
}

initializeUserPoints(); 